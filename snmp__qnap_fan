#!/usr/bin/perl -w
#%# family=snmpauto
#%# capabilities=snmpconf
use strict;
use warnings;
use Munin::Plugin::SNMP;

my( $PluginSess, $E ) = Munin::Plugin::SNMP->session();
die sprintf( "# Error: %s\n", $E ) if $E;

my $PluginVers = '0.0.2';
my $GraphValue = {
    'title'     => 'Fans Speed',
    'device'    => 'QNAP',
    'vlabel'    => 'RPM',
    'base'      => 1000,
    'lower'     => 1500,
    'upper'     => 9000,
};
my $ParentOIDv = '.1.3.6.1.4.1.24681.1.2.15.1';
my $OIDEnfants = {
    'label' => 2,
    'value' => 3,
};
my $DeviceMaps = {
    '1' => 'Fan1',
    '2' => 'Fan2',
};
my $SNMPConfig = {
    'host'      => $ENV{'host'} || $PluginSess->hostname || '',
    'port'      => $ENV{'port'} || 161,
    'community' => $ENV{'community'} || 'dellpublic',
    'version'   => $ENV{'version'} || '2c',
};

my $MetricsSet = $PluginSess->get_hash(
                    '-baseoid'  => $ParentOIDv,
                    '-cols'     => {
                        $OIDEnfants->{'label'} => 'label',
                        $OIDEnfants->{'value'} => 'value',
                    }
                 ) or die( '# Error: '.$PluginSess->error );

if( defined $ARGV[0] ) {

    if( $ARGV[0] eq 'snmpconf' ) {

        printf( "require %s. [1-3]\n", $ParentOIDv );

    } elsif( $ARGV[0] eq 'config' ) {

        if( $SNMPConfig->{'host'} && $SNMPConfig->{'host'} ne 'localhost' ) {
            printf( "host_name %s\n", $SNMPConfig->{'host'} );
        }
        printf( "graph_title %s %s\n", $GraphValue->{'device'}, $GraphValue->{'title'} );
        printf( "graph_args --lower-limit %d --upper-limit %d\n", $GraphValue->{'lower'}, $GraphValue->{'upper'} );
        printf( "graph_vlabel %s\n", $GraphValue->{'vlabel'} );
        printf( "graph_category sensors\n" );

        for my $e ( keys %$MetricsSet ) {
            my $i = oid2label( $e );
            next unless $i;

            for my $f ( 'label' ) {
                printf( "%s.%s %s\n", $i, $f, $MetricsSet->{ $e }->{ $f } );
            }
            printf ( "%s.type GAUGE\n", $i );
        }
    }
    exit 0;

} else {
    # Print values
    for my $e ( keys %$MetricsSet ) {
        my $i = oid2label( $e );
        my $v = [ split( ' ', $MetricsSet->{ $e }->{'value'} ) ]->[0];
        next unless $i;
        printf( "%s.value %d\n", $i, $v );
    }
}

sub oid2label {
    my $argv = shift;
    return $DeviceMaps->{ $argv } || '';
}

=head1 NAME

snmp__qnap_fan - Munin plugin for monitoring fan RPMs in QNAP storage via SNMP.

=head1 SETUP

    # cat /etc/hosts
    192.168.0.111 qn1

    # cd /etc/munin/plugins
    # ln -s /usr/share/munin/plugins/snmp__qnap_fan ./snmp_qn1_qnap_fan
    # /etc/rc.d/init.d/munin-node restart

=head1 SEE ALSO

QNAP Turbo NAS Software User Manual
L<http://docs.qnap.com/nas/en/index.html?snmp_settings.htm>

=head1 AUTHOR

Copyright (C) 2014 azumakuniyuki

=head1 LICENSE

This library is free software; you can redistribute it and/or modify it under 
the same terms as Perl itself.

=cut
